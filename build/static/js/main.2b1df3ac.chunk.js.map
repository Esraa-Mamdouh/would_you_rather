{"version":3,"sources":["actions/types.js","_DATA.js","images/levi.jpg","images/eren.jpg","images/mikasa.jpg","actions/userActions.js","components/LeaderboardCard.js","components/Leaderboard.js","components/Router.js","actions/loginAction.js","images/would_you_rather_logo.png","components/Login.js","components/Navigation.js","actions/questionActions.js","components/NewQuestion.js","components/Home.js","components/UnansweredQuestion.js","App.js","reportWebVitals.js","reducers/index.js","reducers/loginReducer.js","reducers/questionsReducer.js","reducers/usersReduser.js","store.js","index.js"],"names":["ADD_QUESTION","ADD_ANSWER","GET_QUESTIONS","GET_USERS","LOGIN","users","sarahedo","id","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","handleRetrieveUsers","dispatch","then","console","log","type","payload","retrieveUsers","LeaderboardCard","style","display","justifyContent","Card","width","Img","variant","src","this","props","url","Body","Title","rank","Text","answeredQuestions","createdQuestions","score","Component","Leaderboard","sortedUsers","sort","a","b","length","Object","keys","map","user","index","connect","state","login","Login","option","handleSelect","e","setState","handleLogin","forEach","l","placeHolder","DropdownButton","alignRight","title","margin","onSelect","Dropdown","Item","eventKey","Button","onClick","Navigation","handleLogout","Nav","defaultActiveKey","Link","as","to","loginUser","handleRetrieveQuestions","retrieveQuestions","NewQuestion","valueOne","valueTwo","onOptionOneChangeQuery","value","onOptionTwoChangeQuery","handleSubmit","handleAddQuestion","placeholder","onChange","event","target","q","addQuestionAction","Home","Tabs","Tab","UnansweredCard","avatar","handleAddAnswer","answer","qid","_saveQuestionAnswer","addAnswerAction","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","mainReducer","combineReducers","action","optionNumber","values","questionID","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b1df3ac.chunk.js","sourcesContent":["//Question actions\r\nexport const ADD_QUESTION = \"ADD_QUESTION\"\r\nexport const ADD_ANSWER = \"ADD_ANSWER\"\r\nexport const  GET_QUESTIONS = \"GET_QUESTIONS\"\r\n\r\n//user actions\r\nexport const GET_USERS = \"GET_USERS\"\r\n\r\n//login action\r\nexport const LOGIN = \"LOGIN\"","import levi from \"./images/levi.jpg\";\r\nimport eren from \"./images/eren.jpg\";\r\nimport mikasa from \"./images/mikasa.jpg\";\r\nlet users = {\r\n  sarahedo: {\r\n    id: 'sarahedo',\r\n    name: 'Sarah Edo',\r\n    avatarURL: levi,\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n    },\r\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n  },\r\n  tylermcginnis: {\r\n    id: 'tylermcginnis',\r\n    name: 'Tyler McGinnis',\r\n    avatarURL: eren,\r\n    answers: {\r\n      \"vthrdm985a262al8qx3do\": 'optionOne',\r\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n    },\r\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n  },\r\n  johndoe: {\r\n    id: 'johndoe',\r\n    name: 'John Doe',\r\n    avatarURL: mikasa,\r\n    answers: {\r\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n    },\r\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n  }\r\n}\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: '8xf0y6ziyjabvozdd253nd',\r\n    author: 'sarahedo',\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: ['sarahedo'],\r\n      text: 'have horrible short term memory',\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: 'have horrible long term memory'\r\n    }\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: '6ni6ok3ym7mf1p33lnez',\r\n    author: 'johndoe',\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'become a superhero',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe', 'sarahedo'],\r\n      text: 'become a supervillain'\r\n    }\r\n  },\r\n  \"am8ehyc8byjqgar0jgpub9\": {\r\n    id: 'am8ehyc8byjqgar0jgpub9',\r\n    author: 'sarahedo',\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be telekinetic',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be telepathic'\r\n    }\r\n  },\r\n  \"loxhs1bqm25b708cmbf3g\": {\r\n    id: 'loxhs1bqm25b708cmbf3g',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: 'be a front-end developer',\r\n    },\r\n    optionTwo: {\r\n      votes: ['sarahedo'],\r\n      text: 'be a back-end developer'\r\n    }\r\n  },\r\n  \"vthrdm985a262al8qx3do\": {\r\n    id: 'vthrdm985a262al8qx3do',\r\n    author: 'tylermcginnis',\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'find $50 yourself',\r\n    },\r\n    optionTwo: {\r\n      votes: ['johndoe'],\r\n      text: 'have your best friend find $500'\r\n    }\r\n  },\r\n  \"xj352vofupe1dqz9emx13r\": {\r\n    id: 'xj352vofupe1dqz9emx13r',\r\n    author: 'johndoe',\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: ['johndoe'],\r\n      text: 'write JavaScript',\r\n    },\r\n    optionTwo: {\r\n      votes: ['tylermcginnis'],\r\n      text: 'write Swift'\r\n    }\r\n  },\r\n}\r\n\r\nfunction generateUID () {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n}\r\n\r\nexport function _getUsers () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...users}), 1000)\r\n  })\r\n}\r\n\r\nexport function _getQuestions () {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({...questions}), 1000)\r\n  })\r\n}\r\n\r\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    }\r\n  }\r\n}\r\n\r\nexport function _saveQuestion (question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion\r\n      }\r\n      \r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\r\n        }\r\n      }\r\n\r\n      res(formattedQuestion)\r\n    }, 1000)\r\n  })\r\n}\r\n\r\n\r\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer\r\n          }\r\n        }\r\n      }\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser])\r\n          }\r\n        }\r\n      }\r\n\r\n      res()\r\n    }, 500)\r\n  })\r\n}\r\n","export default __webpack_public_path__ + \"static/media/levi.23c856b1.jpg\";","export default __webpack_public_path__ + \"static/media/eren.8135de69.jpg\";","export default __webpack_public_path__ + \"static/media/mikasa.f7d013af.jpg\";","import {GET_USERS} from './types'\r\nimport {_getUsers }from '../_DATA'\r\n\r\nfunction retrieveUsers (users){\r\n    return{\r\n        type: GET_USERS,\r\n        payload: users\r\n    }\r\n}\r\n\r\n//receives nothing\r\nexport  function handleRetrieveUsers (){\r\n    return(dispatch)=>{\r\n        _getUsers().then((users)=>{\r\n            console.log(\"inside userAction\",users)\r\n            dispatch(retrieveUsers(users))\r\n        })\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n//import { Button } from 'react-bootstrap'\r\n\r\nclass LeaderboardCard extends Component {\r\n    //  TODO: remove this state and use users from store\r\n     \r\n    render() {\r\n        return (\r\n            // TODO: display grid leader board\r\n            <div style={{display:\"flex\", justifyContent:'space-around' }}>\r\n                <Card style={{ width: '18rem', }}>\r\n                    {/* TODO: add photo later */}\r\n                    <Card.Img variant=\"top\" src={this.props.url}/>\r\n                    <Card.Body>\r\n                        <Card.Title>{this.props.id}</Card.Title>\r\n                        <Card.Title>Rank: {this.props.rank}</Card.Title>\r\n                        <Card.Text>\r\n                            <div>\r\n                                {/* TODO: add dynamic data later */}\r\n                                <p>Answered Questions: {this.props.answeredQuestions}</p>\r\n                                <p>Created Questions: {this.props.createdQuestions}</p>\r\n                                <p>Score: {this.props.score}</p>\r\n                                \r\n                            </div>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nLeaderboardCard.propTypes={\r\n    url: PropTypes.string.isRequired,\r\n    id:  PropTypes.string.isRequired,\r\n    rank: PropTypes.number.isRequired ,\r\n    answeredQuestions: PropTypes.number.isRequired,\r\n    createdQuestions: PropTypes.number.isRequired,\r\n    score: PropTypes.number.isRequired\r\n  }\r\nexport default LeaderboardCard;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleRetrieveUsers } from '../actions/userActions'\r\nimport LeaderboardCard from './LeaderboardCard'\r\n\r\nclass Leaderboard extends Component {\r\n    // state={\r\n    //     sortedUsers:[]\r\n    // }\r\n    componentDidMount(){\r\n        this.props.handleRetrieveUsers()\r\n        // this.setState(()=>({\r\n        //     sortedUsers:Array.from(this.props.users)\r\n        //   }))\r\n        //this.forceUpdate()\r\n\r\n    }\r\n    render() {\r\n        console.log(\"sorted users1 =\", this.props.sortedUsers )\r\n        this.props.users.sort((a,b)=>{\r\n            if((a.questions.length+ Object.keys(a.answers).length  ) >= (b.questions.length+ Object.keys(b.answers).length  )){\r\n                console.log(\"inside condition true \")\r\n                return -1\r\n            }\r\n            else {\r\n                console.log(\"inside condition fasle \")\r\n                return 1\r\n            }\r\n        })\r\n        console.log(\"sorted users2 =\", this.props.users )\r\n        console.log(\"users = \", this.props.users)\r\n        console.log(\"inside render\", this.props.users)\r\n        return (\r\n            <div>\r\n                <div>\r\n                {this.props.users.map((user,index)=>(\r\n                    < LeaderboardCard\r\n                        key={user.id}\r\n                        url= {user.avatarURL}\r\n                        id= {user.id}\r\n                        rank= {index+1}\r\n                        answeredQuestions= { Object.keys(user.answers).length}\r\n                        createdQuestions= {user.questions.length}\r\n                        score= {Object.keys(user.answers).length+user.questions.length}\r\n                    />\r\n                    // <div key={user.id}>\r\n                    // <p>User id: {user.id}</p>\r\n                    // <p>number of answers: { Object.keys(user.answers).length}</p>\r\n                    // <p>number of questions created: {user.questions.length}</p>\r\n                    // <p>Total score: {Object.keys(user.answers).length+user.questions.length}</p>\r\n                    // </div>\r\n                ))}\r\n                </div>\r\n                {/* < LeaderboardCard/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n  })\r\n  // const mapDispatchToProps = dispatch =>({\r\n  //     login: ()=> dispatch(login(user)),\r\n  //     getUsers: ()=> dispatch(handleRetrieveUsers())\r\n  // })\r\n  export default connect(mapStateToProps,  { handleRetrieveUsers} )(Leaderboard);","import React, { Component } from 'react'\r\nimport Login from './Login'\r\nimport Leaderboard from './Leaderboard'\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nclass Router extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                inside router\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Login />\r\n                </Route>\r\n                {/* <Route path=\"/home\">\r\n                    <Home/>\r\n                </Route>\r\n                <Route path=\"/newquestion\">\r\n                    <NewQuestion/>\r\n                </Route> */}\r\n                <Route path=\"/leaderboard\">\r\n                    <Leaderboard/>\r\n                </Route>\r\n            </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router\r\n","import {LOGIN} from './types'\r\n\r\n//receives user object\r\nexport  function login (user){\r\n    return{\r\n        type: LOGIN,\r\n        payload: user\r\n    }\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/would_you_rather_logo.5e619a36.png\";","import React, { Component } from 'react'\r\nimport Router from './Router' \r\nimport Card from 'react-bootstrap/Card'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../actions/loginAction'\r\nimport { handleRetrieveUsers } from '../actions/userActions'\r\nimport placeHolder from \"../images/would_you_rather_logo.png\";\r\n\r\n// TODO: Add react Router logic\r\nclass Login extends Component {\r\n    state={\r\n        option:\"Select User\"\r\n    }\r\n    componentDidMount(){\r\n        this.props.handleRetrieveUsers()\r\n        //this.forceUpdate()\r\n    }\r\n    handleSelect=(e)=>{\r\n            console.log(e);\r\n            this.setState(()=>({option:e}))\r\n          }\r\n    \r\n    handleLogin =(e)=>{\r\n        // TO DO: Add login logic\r\n        this.props.users.forEach((user)=>{\r\n            if(user.id === this.state.option){\r\n                console.log(\"user =\",user)\r\n                this.props.login(user)\r\n            }\r\n        })\r\n        this.setState(()=>({option:\"Select User\"}))\r\n       \r\n      }\r\n    render() {\r\n        console.log(\"users=\", this.props.users)\r\n        console.log(\"login user =\", this.props.l)\r\n        return (\r\n            <div>\r\n                {/* {(Object.keys(this.props.l).length !== 0) ? <Router/> :  */}\r\n            \r\n            <div style={{display:\"flex\", justifyContent:'space-around' }}>\r\n                <Card style={{ width: '25rem'}} >\r\n                    {/* TO DO: search how to add image here{placeHolder}  this.props.l.avatarURL */}\r\n                <Card.Img variant=\"top\" src= {placeHolder} />\r\n                <Card.Body>\r\n                    <Card.Title>Would You Rather!</Card.Title>\r\n                    <Card.Text>\r\n                    Welcome to Would you rather, please login to continue\r\n                    </Card.Text>\r\n                    <DropdownButton alignRight title={this.state.option}  id=\"dropdown-menu-align-right\" style={{ margin :'20px'}}\r\n                    onSelect={this.handleSelect}\r\n                    >\r\n                        {/* TO DO: make this dropdown dynamic with users get from API */}\r\n                        {\r\n                            this.props.users.map((user)=>(\r\n                                <Dropdown.Item key={user.id} eventKey={user.id}>{user.id}</Dropdown.Item>\r\n                            ))\r\n                        }\r\n                                {/* <Dropdown.Item eventKey=\"option-1\">option-1</Dropdown.Item>\r\n\r\n                                <Dropdown.Item eventKey=\"option-2\">option-2</Dropdown.Item>\r\n\r\n                                <Dropdown.Item eventKey=\"option-3\">option 3</Dropdown.Item> */}\r\n\r\n                                \r\n\r\n                        </DropdownButton>\r\n                    <Button variant=\"primary\" onClick={this.handleLogin}>Login</Button>\r\n                </Card.Body>\r\n                </Card>\r\n                </div> \r\n                {/* } */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  users: state.users,\r\n  l: state.login\r\n})\r\n// const mapDispatchToProps = dispatch =>({\r\n//     login: ()=> dispatch(login(user)),\r\n//     getUsers: ()=> dispatch(handleRetrieveUsers())\r\n// })\r\nexport default connect(mapStateToProps,  { login, handleRetrieveUsers } )(Login);\r\n","import React, { Component } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\nimport { login } from '../actions/loginAction'\r\n\r\n\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\n// import mikasa from './mikasa.jpg';\r\n\r\n class Navigation extends Component {\r\n    handleLogout=(e)=>{\r\n        // this.props.login={}\r\n        const user={}\r\n        this.props.login(user)\r\n    }\r\n    render() {\r\n        //const name='Esraa Mamdouh'\r\n        // const url = mikasa\r\n        return (\r\n            <div >\r\n                <Nav variant=\"tabs\" defaultActiveKey=\"/home\" style={{display:\"flex\", justifyContent:'space-between'}}>\r\n                <Nav.Item>\r\n                    {/* eventKey=\"link-1\" href=\"/home\"*/}\r\n                    {/* <Link to=\"/home\"> */}\r\n                        <Nav.Link  as={Link} to=\"/home\" eventKey=\"link-1\" >Home</Nav.Link>\r\n                    {/* </Link> */}\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    {/* href=\"/newquestion\" */}\r\n                    {/* <Link to=\"/new-question\"> */}\r\n                        <Nav.Link  as={Link} to=\"/new-question\" eventKey=\"link-2\">New Question</Nav.Link>\r\n                    {/* </Link> */}\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    {/* href=\"/leaderboard\" */}\r\n                    {/* <Link to=\"/leaderboard\"> */}\r\n                    <Nav.Link  as={Link} to=\"/leaderboard\" eventKey=\"link-3\" >\r\n                    Leaderboard\r\n                    </Nav.Link>\r\n                    {/* </Link> */}\r\n                </Nav.Item>\r\n                {/* user */}\r\n                <div >\r\n                    <p>Hello, {Object.keys(this.props.loginUser).length >0? this.props.loginUser.id : \"New User\" }     \r\n                    <Button variant=\"danger\" onClick={this.handleLogout} style={{display:'inline'}}>Logout</Button>\r\n                    </p>\r\n                    \r\n                    {/* <img alt=\"avtar\" src={url}/> */}\r\n                </div>\r\n                </Nav>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    loginUser: state.login\r\n  })\r\n  // const mapDispatchToProps = dispatch =>({\r\n  //     login: ()=> dispatch(login(user)),\r\n  //     getUsers: ()=> dispatch(handleRetrieveUsers())\r\n  // })\r\n  export default connect(mapStateToProps,  { login } )(Navigation);\r\n","import {ADD_QUESTION, ADD_ANSWER, GET_QUESTIONS} from './types'\r\nimport {_saveQuestionAnswer, _saveQuestion, _getQuestions}from '../_DATA.js'\r\n\r\n// action creater functions \r\nfunction addQuestionAction (question){\r\n    return{\r\n        type: ADD_QUESTION,\r\n        payload: question\r\n    }\r\n}\r\n function addAnswerAction (answer){\r\n    return{\r\n        type: ADD_ANSWER,\r\n        payload: answer\r\n    }\r\n}\r\nfunction retrieveQuestions (questions){\r\n    return{\r\n        type: GET_QUESTIONS,\r\n        payload: questions\r\n    }\r\n}\r\n\r\n//API handlers + action creaters \r\n\r\n//receives ({author,optionOneText,optionTwoText})\r\nexport function handleAddQuestion(question){\r\n    return (dispatch)=>{\r\n        _saveQuestion(question).then((q)=>\r\n        dispatch( addQuestionAction(q)))\r\n        \r\n    }\r\n}\r\n\r\n//receives({authedUser,qid,answer})\r\nexport function handleAddAnswer (answer){\r\n    return(dispatch)=>{\r\n        _saveQuestionAnswer(answer).then((a)=>{\r\n            dispatch(addAnswerAction(a))\r\n        })\r\n        \r\n    }\r\n} \r\n\r\n//receives nothing\r\nexport function handleRetrieveQuestions (){\r\n    return(dispatch)=>{\r\n        _getQuestions().then((questions)=>{\r\n            dispatch(retrieveQuestions(questions))\r\n        })\r\n    }\r\n} \r\n","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Button } from 'react-bootstrap'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { connect } from 'react-redux'\r\n//import { login } from '../actions/loginAction'\r\nimport { handleAddQuestion, handleRetrieveQuestions } from '../actions/questionActions'\r\n//TODO: for test\r\nimport { handleRetrieveUsers } from '../actions/userActions'\r\n\r\n\r\nclass NewQuestion extends Component {\r\n    state={\r\n        optionOne:\"\",\r\n        optionTwo:\"\",\r\n        valueOne: \"\" ,\r\n        valueTwo:\"\",\r\n    }\r\n    onOptionOneChangeQuery=(value)=>{\r\n        this.setState(()=>({\r\n            optionOne:value,\r\n            valueOne:value\r\n        }))\r\n    }\r\n    onOptionTwoChangeQuery =(value)=>{\r\n        this.setState(()=>({\r\n            optionTwo:value,\r\n            valueTwo:value\r\n        }))\r\n    }\r\n    //TODO: add logic here\r\n    handleSubmit=()=>{\r\n        this.setState(()=>({\r\n            valueOne:\"\",\r\n            valueTwo:\"\"\r\n        }))\r\n        this.props.handleAddQuestion({\r\n            // author: this.props.loginUser,\r\n            //TODO: for test \r\n            author:\"johndoe\",\r\n            optionOneText: this.state.optionOne,\r\n            optionTwoText: this.state.optionTwo,\r\n        })\r\n        this.props.handleRetrieveUsers()\r\n        this.props.handleRetrieveQuestions()\r\n    }\r\n    render() {\r\n        console.log(\"optionOne=\",this.state.optionOne)\r\n        console.log(\"optionTwo=\",this.state.optionTwo)\r\n        console.log(\"users= \", this.props.users)\r\n        console.log(\"questions= \", this.props.questions)\r\n        return (\r\n            \r\n            <div style={{display:\"flex\", justifyContent:'space-around' }}>\r\n                <Card style={{ width: '33rem'}} >\r\n                    {/* TODO: search how to add image here */}\r\n                <Card.Body>\r\n                    <Card.Title>Create new Question</Card.Title>\r\n                    <Card.Text>\r\n                        Complete the question\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                       Would you rather...?\r\n                    </Card.Text>\r\n                    <input\r\n                    type=\"text\" \r\n                    placeholder=\"option one\"\r\n                    onChange={(event)=>this.onOptionOneChangeQuery(event.target.value)} \r\n                    value={this.state.valueOne}                    \r\n                    />\r\n                    <hr/>\r\n                    <p>or</p>\r\n                    <hr/>\r\n                    <input\r\n                    type=\"text\" \r\n                    placeholder=\"option two\"\r\n                    onChange={(event)=>this.onOptionTwoChangeQuery(event.target.value)} \r\n                    value={this.state.valueTwo} \r\n                    />\r\n                    <br/>\r\n                    <Button  style={{ width: '28rem', margin:'20px'}} variant=\"primary\" onClick={this.handleSubmit}>Submit</Button>\r\n                </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//TODO: get login from router\r\n//add dummie data?\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    loginUser: state.login,\r\n    questions: state.questions,\r\n  })\r\n  export default connect(mapStateToProps,  {  handleAddQuestion,handleRetrieveUsers,handleRetrieveQuestions  } )(NewQuestion);\r\n// `author`, `optionOneText`, and `optionTwoText`","import React, { Component } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\n//import { login } from '../actions/loginAction'\r\nimport { handleRetrieveQuestions } from '../actions/questionActions'\r\n//TODO: for test\r\nimport { handleRetrieveUsers } from '../actions/userActions'\r\n\r\n class Home extends Component {\r\n     componentDidMount(){\r\n        this.props.handleRetrieveUsers()\r\n        this.props.handleRetrieveQuestions()\r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Nav variant=\"tabs\" defaultActiveKey=\"/home\" style={{display:\"flex\", justifyContent:'center'}}>\r\n                <Nav.Item>\r\n                        <Nav.Link  eventKey=\"answered-questions\" >Answered Questions </Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                        <Nav.Link  eventKey=\"unanswered-questions\">Unanswered Questions</Nav.Link>\r\n                </Nav.Item>\r\n                </Nav> */}\r\n                <Tabs variant=\"tabs\" defaultActiveKey=\"/home\" style={{display:\"flex\", justifyContent:'center'}}>\r\n                    <Tab  eventKey=\"answered-questions\" title=\"Answered Questions \"> \r\n\r\n                    </Tab>\r\n                    <Tab  eventKey=\"unanswered-questions\"title=\"Unanswered Questions \" > \r\n\r\n                    </Tab>\r\n                </Tabs>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    loginUser: state.login,\r\n    questions: state.questions,\r\n    \r\n  })\r\n  // const mapDispatchToProps = dispatch =>({\r\n  //     login: ()=> dispatch(login(user)),\r\n  //     getUsers: ()=> dispatch(handleRetrieveUsers())\r\n  // })\r\n  export default connect(mapStateToProps,  { handleRetrieveQuestions,handleRetrieveUsers } )(Home);\r\n","import React, { Component } from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap'\r\n// import Form from 'react-bootstrap/Form'\r\n\r\nimport { connect } from 'react-redux'\r\nimport image from '../images/levi.jpg'\r\nimport { handleRetrieveUsers } from '../actions/userActions'\r\nimport { handleRetrieveQuestions,handleAddAnswer } from '../actions/questionActions'\r\n\r\n class UnansweredCard extends Component {\r\n    state = {\r\n        option: \"\",\r\n         //TODO: only for the test \r\n         question:{\r\n            id: 'xj352vofupe1dqz9emx13r',\r\n            author: 'johndoe',\r\n            timestamp: 1493579767190,\r\n            optionOne: {\r\n              votes: ['johndoe'],\r\n              text: 'write JavaScript',\r\n            },\r\n            optionTwo: {\r\n              votes: ['tylermcginnis'],\r\n              text: 'write Swift'\r\n            }\r\n          }\r\n    }\r\n       \r\n\r\n     componentDidMount(){\r\n        this.props.handleRetrieveQuestions()\r\n        this.props.handleRetrieveUsers ()\r\n     } \r\n    onClick = (value) => () =>{\r\n        this.setState(()=>({\r\n            option:value,\r\n        }))\r\n    }\r\n\r\n    handleSubmit =(e)=>{\r\n        // TODO: Add add answer logic\r\n      }\r\n\r\n    render() {\r\n        console.log(\"users= \",this.props.users)\r\n        console.log(\"questions= \",this.props.questions)\r\n        let avatar;\r\n        this.props.users.forEach((user)=>{\r\n            if(user.id === this.state.question.author){\r\n                console.log(\"inside avatar\",avatar)\r\n                avatar=user.avatarURL\r\n            }\r\n        })\r\n        console.log(\"option is: \",this.state.option)\r\n        return (\r\n            <div>\r\n                <div style={{display:\"flex\", justifyContent:'space-around' }}>\r\n                <Card style={{ width: '18rem', }}>\r\n                    {/* TODO: add author avatar photo later */}\r\n                    <Card.Img variant=\"top\" src=\"holder.js/100px180\"/>\r\n                    <Card.Body>\r\n                        <Card.Title> \r\n                            {\r\n                                 avatar   \r\n                            }\r\n                        </Card.Title>\r\n                        <Card.Text >\r\n                            \r\n                                {/* <div style={{ float:'left'}}> */}\r\n                                    <input type=\"radio\" value=\"Male\" name=\"gender\" onClick={this.onClick(\"optionOne\")}/> Option One \r\n                                {/* </div> */}\r\n                                <br/>\r\n                                {/* <div style={{ float:'left'}} > */}\r\n                                    <input type=\"radio\" value=\"Male\" name=\"gender\" onClick={this.onClick(\"optionTwo\")} /> Option Two\r\n                                {/* </div> */}\r\n                                <br/>\r\n                                {/* <div style={{marginTop:'40px',}}> */}\r\n                                    <Button variant=\"primary\" onClick={this.handleSubmit} style={{width: '12rem'}}>Submit</Button>\r\n                                {/* </div> */}\r\n                            \r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    users: state.users,\r\n    loginUser: state.login,\r\n    questions : state.questions,\r\n  })\r\n  // const mapDispatchToProps = dispatch =>({\r\n  //     login: ()=> dispatch(login(user)),\r\n  //     getUsers: ()=> dispatch(handleRetrieveUsers())\r\n  // })\r\n  //TODO: retrieve users and questions for test \r\n  export default connect(mapStateToProps,  { handleRetrieveQuestions,handleRetrieveUsers,handleAddAnswer } )(UnansweredCard);","import './App.css';\r\nimport { connect } from 'react-redux'\r\nimport Login from './components/Login'\r\nimport Leaderboard from './components/Leaderboard'\r\nimport Navigation from './components/Navigation'\r\nimport NewQuestion from './components/NewQuestion'\r\nimport Home from './components/Home'\r\nimport UnansweredQuestion from './components/UnansweredQuestion'\r\nimport {\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Navigation/> */}\r\n      {/* <Login/> */}\r\n      Esraa Mamdouh kkkk\r\n      {/* < Leaderboard/> */}\r\n      {/* <NewQuestion/> */}\r\n      {/* <Home/> */}\r\n      {/* <UnansweredQuestion/> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n// const mapStateToProps = (state) => ({\r\n//   users: state.usersReducer.users\r\n// })\r\n// export default connect(mapStateToProps, { login, getUsers })(Login);\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   currentUser: state.loginReducer.currentUser,\r\n//   questions: state.questionsReducer.questions\r\n// })\r\n// export default connect(mapStateToProps, {})(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers} from 'redux'\r\nimport loginReducer from './loginReducer'\r\nimport questionsReducer from './questionsReducer'\r\nimport usersReducer from './usersReduser'\r\n\r\nconst mainReducer = combineReducers({    //store is object\r\n    login: loginReducer,\r\n    questions: questionsReducer,\r\n    users: usersReducer,\r\n  })\r\n\r\nexport default mainReducer;","import { LOGIN } from \"../actions/types\"\r\n\r\n//state= login \r\n//Reducer 1--- it is a pure function takes old state and action as parameters and return a new state \r\nexport default function loginReducer(state={},action){    //assume state is empty object(no user)\r\n    console.log(\"inside loginReducerrrrrr\",action)\r\n    switch (action.type){\r\n        case LOGIN:\r\n            console.log(\"inside loginReducer\",action.type,action.payload)\r\n            // if(Object.keys(obj).length !== 0){}\r\n            return action.payload;     //return user object \r\n        default:\r\n            return state;\r\n    }\r\n    \r\n}","import { ADD_QUESTION, ADD_ANSWER, GET_QUESTIONS } from \"../actions/types\"\r\n\r\n//state = questions\r\n//Reducer 1--- it is a pure function takes old state and action as parameters and return a new state \r\nexport default function questionsReducer(state=[],action){   //empty array of Questions\r\n    switch(action.type){\r\n        case ADD_QUESTION:\r\n            return( \r\n                [action.payload, ...state]\r\n                )\r\n            //return  state.concat([action.payload])     // we used concat -- 1. it returns new array (doesn't modify state array)\r\n        case  ADD_ANSWER:\r\n            return(\r\n                state.map(question=>{\r\n                    console.log(question)    \r\n                    let optionNumber ;   //optionOne or optionTwo\r\n                    if (action.payload.qid === question.id){\r\n                        //question object\r\n                        console.log(\"inside ADD_ANSWER reducer: \",question)\r\n                        optionNumber=action.payload.answer\r\n                        question[optionNumber].votes=question[optionNumber].votes.concat([action.payload.authedUser])\r\n                    }\r\n                    return question\r\n                    \r\n                })\r\n            )\r\n        case GET_QUESTIONS:\r\n            return (\r\n                Object.values(action.payload)   \r\n            )\r\n        default:\r\n            return state\r\n    }\r\n}","import { GET_USERS , ADD_QUESTION, ADD_ANSWER } from \"../actions/types\"\r\n\r\n//state= users\r\nexport default function usersReducer(state=[],action){\r\n    console.log(\"inside userReducer\",action.type,action.payload)\r\n    //console.log(\"inside userReducer\",action.type, Object.values(action.payload))\r\n    switch(action.type){\r\n        case GET_USERS :\r\n            console.log(\"inside userReducer\",action.payload)\r\n            // if(Object.keys(obj).length !== 0){}\r\n            return Object.values(action.payload)\r\n            // let fetchedUsers = []\r\n            // for (const id in action.payload) {\r\n            //     fetchedUsers.push(action.payload[id])\r\n            // }\r\n            // return (\r\n            //     fetchedUsers \r\n            // )\r\n        case ADD_QUESTION:\r\n            console.log(\"inside userReducer2\",action.payload)\r\n            return(\r\n                state.map(user=>{\r\n                    console.log(user)    \r\n                    //let questionAuthor=action.payload.author \r\n                    let questionID; \r\n                    if (action.payload.author  === user.id){\r\n                        //user object\r\n                        console.log(\"inside ADD_ANSWER reducer: \",user)\r\n                        questionID=action.payload.id\r\n                        user.questions=user.questions.concat([questionID])\r\n                    }\r\n                    return user\r\n                    \r\n                })\r\n            )\r\n            \r\n        case ADD_ANSWER :\r\n            console.log(\"inside userReducer3\",action.payload)\r\n            return(\r\n                state.map(user=>{\r\n                    console.log(user)    \r\n                    //let questionAuthor=action.payload.author \r\n                    let questionID; \r\n                    let option;\r\n                    if (action.payload.authedUser  === user.id){\r\n                        //user object\r\n                        console.log(\"inside ADD_ANSWER reducer: \",user)\r\n                        questionID=action.payload.qid;\r\n                        option=action.payload.answer;\r\n\t\t\t\t\t\tuser.answers[questionID] = option;\r\n                        console.log(\"action\",action)\r\n                        console.log(\"useeeer\",user)\r\n                    }\r\n                    return user\r\n                    \r\n                })\r\n            )\r\n        default: \r\n            console.log(\"inside userReducer4\",action.payload)\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.css\"\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}